library(tidyverse)
library(dplyr)
library(tidyr)
library(viridis)
library(stargazer)
library(car)
library(plyr)
library(moments)
library(gghalves)
dat <- read.csv("D:/ECO/7063/NDAP_REPORT_7063.csv")
dat
dat <- na.omit(dat)
dat

colnames(dat)


df<- dat %>% select(-"Country")
df
df <- df[,!names(df) %in% c("State.lgd.code", "Month", "Year")]
df

df <- df %>% 
  rename("DID" = "District.lgd.code")

df<- df %>%
  mutate(ID = df[row_number(), 'DID']*100+(df[row_number(), 'Yearcode'])-2011)
df<- df %>% select(-"ROWID")

df
df2 <- unique( df[ , c('State','DID','District','Yearcode','Monthcode','Ground.water.level','ID') ] )
df2
df2 <- df2 %>% 
  rename("YEAR" = "Yearcode")
df2

df3 <- read.csv("D:/ECO/HBS_Table_No._06___Net_State_Domestic_Product_at_Factor_Cost_-_State-Wise_(at_Constant_Prices).xlsx - Report 1.csv")


df3 <- df3[-35,]

View(df3)

df4 <- gather(df3, key = "State", value = "value",-YEAR)
df4$YEAR <- substr(df4$YEAR, 1, 4)
#View(df4)


df2$State <- toupper(df2$State)
unique(df2$State)
unique(df4$State)
df4$State <- chartr(".", " ", df4$State)
unique(df4$State)
df4$State[df4$State == 'JAMMU   KASHMIR'] <- 'JAMMU AND KASHMIR'
df4$State[df4$State == 'ORISSA'] <- 'ODISHA'
df4$State[df4$State == 'ANDAMAN   NICOBAR ISLANDS'] <- 'ANDAMAN AND NICOBAR ISLANDS'

unique(df4$State)

View(df2)
colnames(df2)
df2<- df2 %>% select(-"Monthcode")


df2 <- df2 %>%                                     # Consolidate duplicates
  group_by(ID, State, DID,District,YEAR) %>%
  dplyr::summarise(Ground.water.level = mean(Ground.water.level)) %>% 
  as.data.frame()

#REMOVE WEIRD DID
df2<-df2[!(df2$DID==999999),]

df5 <- merge(df2, df4, by = c("YEAR","State"))
#View(df5)

df5[df5$value == '',]
mean(df5$Ground.water.level)



gini <- read.csv("D:/ECO/gini.xlsx.csv")
#View(gini)
gini <- gini[-c(1,2,3), -c(1,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21)]

colnames(gini)[1] <- "District"
colnames(gini)[2] <- "GI"
#View(gini)

final <- merge(df5, gini, by = c("District"))
final$value <- as.numeric(final$value)
final$GI <- as.numeric(final$GI)
final$Ground.water.level <- as.numeric(final$Ground.water.level)
final$YEAR <- as.numeric(final$YEAR)

final <- final %>% 
  rename("SDP" = "value")

View(final)

stargazer(final[c("Ground.water.level","SDP","GI")], type = "text",
          title="Descriptive statistics of variables", digits=1, out="stats.png")


colnames(final)


final%>%
  drop_na(SDP)%>%
  ggplot(aes(x=as.factor(YEAR),y=SDP))+
  geom_half_boxplot(center=TRUE, errorbar.draw=FALSE, 
                    width=1, nudge=0.02,outlier.color = "red", outlier.size=3, alpha=0.1) +
  stat_summary(fun.data = "mean_cl_boot", colour = "green")+
  geom_half_violin(side="r", nudge=0.01, line="dotted") +
  labs(y = "SDP",x="YEAR")+
  theme_bw()


final%>%
  drop_na(GI)%>%
  ggplot(aes(x=as.factor(YEAR),y = GI)) +
  geom_half_boxplot(center=TRUE, errorbar.draw=FALSE, 
                    width=1, nudge=0.02,outlier.color = "red", outlier.size=3, alpha=0.1) +
  stat_summary(fun.data = "mean_cl_boot", colour = "green", size=1)+
  geom_half_violin(side="r", nudge=0.01) +
  labs(y = "GI",x="YEAR")+
  theme_bw()

final%>%
  drop_na(Ground.water.level)%>%
  ggplot(aes(as.factor(YEAR),Ground.water.level)) +
  geom_half_boxplot(center=TRUE, errorbar.draw=FALSE, 
                    width=1, nudge=0.02,outlier.color = "red", outlier.size=3, alpha=0.1) +
  stat_summary(fun.data = "mean_cl_boot", colour = "green", size=1)+
  geom_half_violin(side="r", nudge=0.01, line="dotted") +
  labs(y = "Ground Water Level",x="YEAR")+
  theme_bw()




final <- na.omit(final)

specific <- subset( final, final$Ground.water.level<50 & final$SDP<1200000)

model1<-lm(formula=Ground.water.level~SDP,data=specific)
stargazer(model1,type="text")
specific$Residual_value<-residuals(model1)

specific %>%
  ggplot(aes(SDP, Ground.water.level,
             colour = YEAR))+
  geom_point(alpha = 0.5)+
  geom_smooth(method=lm, se=F)+
  facet_wrap(~YEAR)





specific %>%      #plot1
  ggplot(aes(SDP, Ground.water.level))+
  geom_point(alpha = 0.1)+
  geom_smooth(method=lm, aes(fill="red"))

#plot2
specific%>%
  ggplot(aes(specific$SDP, specific$Residual_value))+
  geom_point(alpha=0.1)+
  labs(x="SDP", y="Residual_value")


#plot3
specific$Predicted_value<-fitted.values(model1)

specific%>%
  ggplot(aes(specific$Ground.water.level, specific$Predicted_value))+
  geom_point(alpha=0.1)+
  labs(x="EQI_Actual", y="Predicted_value")

#PART 8
specific %>%
  ggplot(aes(Residual_value))+
  geom_histogram()+
  geom_vline(aes(xintercept = mean(Residual_value)), color = "red")+
  theme_bw()


#PART 9
model2<-lm(formula=Ground.water.level~SDP+SDP^2+SDP^3+GI,data=specific)


stargazer(model2,type="text")
avPlots(model2, col='red', cex=0.4, lwd=4, main="Dependence on each of the Independent Variables while holding others fixed")



final <- merge(df5, gini, by = c("District"))
final$value <- as.numeric(final$value)
final$GI <- as.numeric(final$GI)
final$Ground.water.level <- as.numeric(final$Ground.water.level)
final$YEAR <- as.numeric(final$YEAR)
final$YEAR <- as.factor(final$YEAR)

final <- final %>% 
  rename("SDP" = "value")

subset( final, final$Ground.water.level<50) %>%
  ggplot(aes(Ground.water.level, fill=YEAR))+
  geom_histogram()+
  geom_vline(aes(xintercept = mean(Ground.water.level)), color = "red")+
  theme_bw()


final %>%
  drop_na(GI)%>%
  ggplot(aes(GI, fill=YEAR))+
  geom_histogram(binwidth = 0.025)+
  geom_vline(aes(xintercept = mean(GI)), color = "red")+
  theme_bw()



subset( final, final$SDP<1200000) %>%
  drop_na(SDP)%>%
  ggplot(aes(SDP, fill = YEAR))+
  geom_histogram(bins=15)+
  geom_vline(aes(xintercept = mean(SDP)), color = "red")+
  theme_bw()


specific$YEAR <- as.factor(specific$YEAR)

specific %>%
  ggplot(aes(SDP, Ground.water.level,
             colour = YEAR))+
  geom_point(alpha = 0.3)+
  geom_smooth(method=lm, se=F)

write.csv(specific, file = "Group_16.csv", row.names = FALSE)



skewness(final$SDP, na.rm = TRUE)
skewness(final$GI ,na.rm=TRUE)
skewness(final$Ground.water.level,na.rm=TRUE)

library(tidyverse)
library(dplyr)
library(tidyr)
library(viridis)
library(stargazer)
library(car)
library(moments)
library(gghalves)
dat <- read.csv("D:/ECO/7063/NDAP_REPORT_7063.csv")
dat
dat <- na.omit(dat)
dat

colnames(dat)


df<- dat %>% select(-"Country")
df
df <- df[,!names(df) %in% c("State.lgd.code", "Month", "Year")]
df

df <- df %>% 
  rename("DID" = "District.lgd.code")

df<- df %>%
  mutate(ID = df[row_number(), 'DID']*100+(df[row_number(), 'Yearcode'])-2011)
df<- df %>% select(-"ROWID")

df
df2 <- unique( df[ , c('State','DID','District','Yearcode','Monthcode','Ground.water.level','ID') ] )
df2
df2 <- df2 %>% 
  rename("YEAR" = "Yearcode")
df2

df3 <- read.csv("D:/ECO/HBS_Table_No._06___Net_State_Domestic_Product_at_Factor_Cost_-_State-Wise_(at_Constant_Prices).xlsx - Report 1.csv")


df3 <- df3[-35,]

#View(df3)

df4 <- gather(df3, key = "State", value = "value",-YEAR)
df4$YEAR <- substr(df4$YEAR, 1, 4)
#View(df4)


df2$State <- toupper(df2$State)
unique(df2$State)
unique(df4$State)
df4$State <- chartr(".", " ", df4$State)
unique(df4$State)
df4$State[df4$State == 'JAMMU   KASHMIR'] <- 'JAMMU AND KASHMIR'
df4$State[df4$State == 'ORISSA'] <- 'ODISHA'
df4$State[df4$State == 'ANDAMAN   NICOBAR ISLANDS'] <- 'ANDAMAN AND NICOBAR ISLANDS'

unique(df4$State)

#View(df2)
colnames(df2)
df2<- df2 %>% select(-"Monthcode")


df2 <- df2 %>%                                     # Consolidate duplicates
  group_by(ID, State, DID,District,YEAR) %>%
  dplyr::summarise(Ground.water.level = mean(Ground.water.level)) %>% 
  as.data.frame()

#REMOVE WEIRD DID
df2<-df2[!(df2$DID==999999),]

df5 <- merge(df2, df4, by = c("YEAR","State"))
#View(df5)

df5[df5$value == '',]
mean(df5$Ground.water.level)



gini <- read.csv("D:/ECO/gini.xlsx.csv")
#View(gini)
gini <- gini[-c(1,2,3), -c(1,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21)]

colnames(gini)[1] <- "District"
colnames(gini)[2] <- "GI"
#View(gini)

final <- merge(df5, gini, by = c("District"))
final$value <- as.numeric(final$value)
final$GI <- as.numeric(final$GI)
final$Ground.water.level <- as.numeric(final$Ground.water.level)
final$YEAR <- as.numeric(final$YEAR)
final$value <- final$value/10000
final <- final %>% 
  rename("SDP" = "value")

View(final)

stargazer(final[c("Ground.water.level","SDP","GI")], type = "text",
          title="Descriptive statistics of variables", digits=1, out="stats.png")


colnames(final)

final <- na.omit(final)


Y <- model <-lm(formula=Ground.water.level~SDP,data=final)
stargazer(Y,type="text")

library(pacman)
pacman::p_load(data.table, fixest, stargazer, dplyr, magrittr, MonteCarlo) 


beta_0<- coef(Y)[1]
beta_1<- coef(Y)[2]
set.seed(1)  # Seed
n = 1000     # Sample size
M = 100      # Number of experiments/iterations

## Storage 
slope_DT <- rep(0,M)
intercept_DT <- rep(0,M)

rs <- residuals(Y)
sd(rs)
## Begin Monte Carlo

for (i in 1:M){ #  M is the number of iterations
  
  # Generate data
  U_i = rnorm(n, mean = 0, sd = 10.9341) # Error
  X_i = sample(final$SDP, n) # Independent variable
  Y_i = beta_0 + beta_1*X_i + U_i  # Dependent variable
  
  # Formulate data.table
  data_i = data.table(Y = Y_i, X = X_i)
  
  # Run regressions
  ols_i <- fixest::feols(data = data_i, Y ~ X)
  
  # Extract slope coefficient and save
  slope_DT[i] <- ols_i$coefficients[2]
  intercept_DT[i] <- ols_i$coefficients[1]
  
}


# Summary statistics
estimates_DT <- data.table(beta_1 = slope_DT, beta_0 = intercept_DT)
stargazer(estimates_DT[, c("beta_1", "beta_0")], type = "text")

# Visual inspection
hist(estimates_DT[, beta_1], xlim = c(-0.015,0.07), main="Estimate of beta_1 with m=100")

hist(estimates_DT[, beta_0], xlim = c(6,9.6), main="Estimate of beta_0 with m=5000")


model1<-lm(formula=Ground.water.level~SDP,data=final)
stargazer(model1,type="text")

final <- mutate(final, SDP2 = SDP^2)
final <- mutate(final, SDP3 = SDP^3)


model1<-lm(formula=Ground.water.level~SDP+SDP2+SDP3+GI,data=final)
stargazer(model1,type="text")
summary(model1)

view(final)
# Create a data frame with x values
dff <- data.frame(x = seq(0, 170, by = 1))

# Add a column with y values
dff$y <- 0.215 * dff$x - 0.002 * dff$x^2 + 3.883e-06 * dff$x^3

# Plot the graph
ggplot(data = dff, aes(x = x, y = y)) + 
  geom_line() +
  labs(x = "X", y = "Y", title = "Graph of y = 0.215x - 0.002x^2 + 3.883e-06x^3")

model1

#ADDING RAINFALL
rainfall <- read.csv("D:/ECO/ZIP/7066/NDAP_REPORT_7066.csv")
rainfall<- rainfall %>%
  mutate(ID = rainfall[row_number(), 'District.lgd.code']*100+(rainfall[row_number(), 'Yearcode'])-2011)

rainfall <- rainfall[,-c(1,2,3,4,5,6,7,8,9,10,12,13)]
colnames(rainfall)
rainfall <- rainfall %>% 
  rename("Rainfall" = "Actual.rainfall")

rainfall <- rainfall %>%                                     # Consolidate duplicates
  group_by(ID) %>%
  summarise(Rainfall = mean(Rainfall)) %>% 
  as.data.frame()


final <- merge(final, rainfall, by = c("ID"))
view(gpi)
#ADDING GENDER PARITY INDEX

gpi <- read.csv("D:/ECO/gender.csv")
gpi$State<-toupper(gpi$State)


final <- merge(final, gpi, by = c("State", "YEAR"))

#INCLUDING THE ELECTION DATA
elec2019 <- read.csv("D:/ECO/final(1).csv")
elec2014 <- read.csv("D:/ECO/IndiaVotes_PC__All_States_2014(1).csv")
elec2014 <- elec2014[,-c(3,4,5,6,7,8,9,10,11)]
unique(elec2019$State)

elec2014$Turnout <- gsub("%", "", elec2014$Turnout)
elec2014$Turnout <- as.numeric(as.character(elec2014$Turnout))

elec2014 <- elec2014 %>%                                     # Consolidate duplicates
  group_by(State) %>%
  summarise(Turnout = mean(Turnout)) %>% 
  as.data.frame()

elec2019 <- elec2019 %>%                                     # Consolidate duplicates
  group_by(State) %>%
  summarise(Turnout = mean(Turnout)) %>% 
  as.data.frame()

elec2014$State[elec2014$State == 'Jammu & Kashmir'] <- 'JAMMU AND KASHMIR'
elec2014$State[elec2014$State == 'Orissa'] <- 'ODISHA'
elec2014$State[elec2014$State == 'Bihar '] <- 'Bihar'
elec2014$State[elec2014$State == 'Andhra Pradesh '] <- 'Andhra Pradesh'
elec2014$State[elec2014$State == 'Uttar Pradesh '] <- 'Uttar Pradesh'

elec2019$State[elec2019$State == 'Jammu & Kashmir'] <- 'JAMMU AND KASHMIR'
elec2019$State[elec2019$State == 'Orissa'] <- 'ODISHA'
elec2019$State[elec2019$State == 'Bihar '] <- 'Bihar'
elec2019$State[elec2019$State == 'Andhra Pradesh '] <- 'Andhra Pradesh'
elec2019$State[elec2019$State == 'Uttar Pradesh '] <- 'Uttar Pradesh'
elec2014$State<-toupper(elec2014$State)
elec2019$State<-toupper(elec2019$State)

merged_data2 <- merge(final[final$YEAR >= 2014 & final$YEAR <= 2018, ], elec2014, by = c("State"))
merged_data3 <- merge(final[final$YEAR >= 2019, ], elec2019, by = c("State"))
final <- union_all(merged_data2, merged_data3)
view(final)


#LAND USE DATA
land_use <- read.csv("D:/ECO/Agriculture.csv")
final<-merge(final, land_use, by = c("District", "YEAR"))
final$Net.sown.land.area<-final$Net.sown.land.area/10000

unique(final$State)
final <- na.omit(final)

model1<-lm(formula=Ground.water.level~SDP+SDP2+GI+log(Rainfall)+Turnout+Net.sown.land.area+GPHS.ST.,data=final)
stargazer(model1,type="text")
summary(model1)
model1
north_states <- c("DELHI", "HARYANA", "HIMACHAL PRADESH", "JAMMU AND KASHMIR", "PUNJAB", "RAJASTHAN", "UTTARAKHAND", "UTTAR PRADESH", "CHANDIGARH","BIHAR", "JHARKHAND", "ODISHA", "WEST BENGAL","ARUNACHAL PRADESH", "ASSAM", "TRIPURA", "MEGHALAYA", "NAGALAND")

final <- final %>% 
  mutate(north = ifelse(State %in% north_states, 1, 0))

south_states <- c("ANDHRA PRADESH", "KARNATAKA", "KERALA", "TAMIL NADU", "TELANGANA", "PUDUCHERRY","GOA", "GUJARAT", "MAHARASHTRA","CHHATTISGARH")


colnames(final)
final <- final %>% 
  mutate(south = ifelse(State %in% south_states, 1, 0))


northern <- subset( final, final$north==1)
southern <- subset( final, final$south==1)
model1<-lm(formula=Ground.water.level~SDP+SDP2+GI+log(Rainfall)+Turnout+Net.sown.land.area+GPHS.ST.,data=northern)
stargazer(model1,type="text")

ssr_north <- sum(residuals(model1)^2)

model2<-lm(formula=Ground.water.level~SDP+SDP2+GI+log(Rainfall)+Turnout+Net.sown.land.area+GPHS.ST.,data=southern)
stargazer(model2,type="text")

ssr_south <- sum(residuals(model2)^2)


model3<-lm(formula=Ground.water.level~SDP+SDP2+GI+log(Rainfall)+Turnout+Net.sown.land.area+GPHS.ST.,data=final)
stargazer(model3,type="text")

ssr <- sum(residuals(model3)^2)

n1 <- nrow(final)
n1
k <- length(coefficients(model1))
F_stat <- ((ssr - (ssr_north + ssr_south)) / k) / ((ssr_north + ssr_south) / (n1 - 2*k))
p_value_f <- pf(F_stat, k, n1 - 2*k, lower.tail = FALSE)

# Calculate mean and standard error of mean for northern and southern state-groups
mean_north <- mean(northern$Ground.water.level)
se_north <- sd(northern$Ground.water.level) / sqrt(length(northern$Ground.water.level))
mean_south <- mean(southern$Ground.water.level)
se_south <- sd(southern$Ground.water.level) / sqrt(length(southern$Ground.water.level))

# Calculate t-statistic
t_stat <- (mean_north - mean_south) / sqrt(se_north^2/length(northern$Ground.water.level) + se_south^2/length(southern$Ground.water.level))

# Calculate degrees of freedom
df <- length(northern$Ground.water.level) + length(southern$Ground.water.level) - 2

# Calculate p-value
p_value_t <- 2 * pt(abs(t_stat), df, lower.tail = FALSE)



hist(final$Rainfall)

variance_data_north <- var(northern$Ground.water.level)

variance_data_south <- var(southern$Ground.water.level)


F_stat <- variance_data_north/variance_data_south
p_value <- pf(F_stat,nrow(northern)-1, nrow(southern)-1, lower.tail = FALSE)
p_value

specific <- final

north_states <- c("DELHI", "HARYANA", "HIMACHAL PRADESH", "JAMMU AND KASHMIR", "PUNJAB", "RAJASTHAN", "UTTARAKHAND", "UTTAR PRADESH", "CHANDIGARH")

specific <- specific %>% 
  mutate(north = ifelse(State %in% north_states, 1, 0))

south_states <- c("ANDHRA PRADESH", "KARNATAKA", "KERALA", "TAMIL NADU", "TELANGANA", "PUDUCHERRY")
east_states <- c("BIHAR", "JHARKHAND", "ODISHA", "WEST BENGAL")
west_states <- c("GOA", "GUJARAT", "MAHARASHTRA")
north_east_states <- c("ARUNACHAL PRADESH", "ASSAM", "TRIPURA", "MEGHALAYA", "NAGALAND")
central_states <- c("CHHATTISGARH", "MADHYA PRADESH")
colnames(final)
specific <- specific %>% 
  mutate(south = ifelse(State %in% south_states, 1, 0))

specific <- specific %>% 
  mutate(east = ifelse(State %in% east_states, 1, 0))

specific <- specific %>% 
  mutate(west = ifelse(State %in% west_states, 1, 0))


specific <- specific %>% 
  mutate(north_east = ifelse(State %in% north_east_states, 1, 0))

specific <- specific %>% 
  mutate(central = ifelse(State %in% central_states, 1, 0))

write.csv(specific, file = "Group_16f.csv", row.names = FALSE)

#log of gwl/rainfall helping
model1<-lm(formula=Ground.water.level~SDP+SDP2+north+east+south+north_east+west+GI+log(Rainfall)+Turnout+Net.sown.land.area+GPHS.ST.,data=specific)
stargazer(model1,type="text")
#at 1630000 we observe the downward trend

res <- resid(model1)
plot(fitted(model1), res)
abline(0,0)
qqnorm(res)
qqline(res) 
view(specific)
